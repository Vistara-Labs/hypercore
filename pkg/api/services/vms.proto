syntax = "proto3";

package vm.services.api;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "pkg/api/types/microvm.proto";

option go_package = "pkg/api/services/microvm;microvm";

// MicroVM providers a service to create and manage the lifecycle of microvms.
service VMService {
    rpc Create(CreateMicroVMRequest) returns (CreateMicroVMResponse) {
    }
    rpc Delete(DeleteMicroVMRequest) returns (google.protobuf.Empty) {
    }
    rpc Get(GetMicroVMRequest) returns (GetMicroVMResponse) {
    }
    rpc List(ListMicroVMsRequest) returns (ListMicroVMsResponse) {
    }
    rpc ListVMsStream(ListMicroVMsRequest) returns (stream ListMessage);
  }
  
  message CreateMicroVMRequest {
    MicroVMSpec microvm = 1;
    map<string, google.protobuf.Any> metadata = 2;
  }
  
  message CreateMicroVMResponse {
    MicroVM microvm = 1;
  }
  
  message DeleteMicroVMRequest {
    string id = 1;
  }
  
  message GetMicroVMRequest {
    string id = 1;
  }
  
  message GetMicroVMResponse {
    MicroVM microvm = 1;
  }
  
  message ListMicroVMsRequest {
    string id = 1;
  }
  
  message ListMicroVMsResponse {
    repeated MicroVM microvm = 1;
  }
  
  message ListMessage {
    MicroVM microvm = 1;
  }
